// https://leetcode.com/problems/first-missing-positive/
class Solution {
    public int firstMissingPositive(int[] arr) {
        int i = 0;
        while(i < arr.length) {
            int current = arr[i] - 1;
            if(arr[i] > 0 && arr[i] <= arr.length && arr[i] != arr[current]) {
                swap(arr, i, current);
            } else {
                i++;
            }
        }

        for(int index = 0; index < arr.length; index++) {
            if(arr[index] != index + 1) { // Range is 0 - n
                return index + 1;
            }
        }
        return arr.length + 1; //Last No. missing **IMP : Do +1
    }

    public void swap(int[] arr, int first, int second) {
        int temp = arr[first];
        arr[first] = arr[second];
        arr[second] = temp;
    }
}
