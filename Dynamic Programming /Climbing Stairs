class Solution { //Time:O(n) Space:O(1)
    public int climbStairs(int n) {
        int one = 1, two = 1; //(n-1)th and nth step

        for(int i = 0; i < n - 1; i++) { //Iterate (n-1), I already taken 2 var
            int temp = one;
            one = one + two;
            two = temp;
        }
        return one;
    }
    // public int helper(int n, int step) {
    //     if(step == n) {
    //         return 1;
    //     } else if(step > n) {
    //         return 0;
    //     }

    //     if(dp[step] != -1) {
    //         return dp[step];
    //     }

    //     return dp[step] = helper(n, step + 1) + helper(n, step + 2);
    // }
}
