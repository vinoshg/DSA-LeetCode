// https://leetcode.com/problems/subarray-sum-equals-k/description/
class Solution { // Time : O(n) and Space : O(n)
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>(); // <sum, freq>

        map.put(0, 1); //empty array
        int ans = 0;
        int sum = 0;

        for(int j = 0; j < nums.length; j++) {
            sum += nums[j];

            if(map.containsKey(sum - k)) {
                ans += map.get(sum - k);
            }

            if(map.containsKey(sum)) {
                map.put(sum, map.get(sum) + 1);
            } else {
                map.put(sum, 1);
            }
        }
        return ans;
    }
}
