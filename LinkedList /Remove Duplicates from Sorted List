// https://leetcode.com/problems/remove-duplicates-from-sorted-list/
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null) { //No need to check node.next == null, Anyway It will work for a single element
            return head;
        }

        ListNode node = head;

        while(node != null) {
            if(node.next != null && node.val == node.next.val) {
                node.next = node.next.next;
            } else {
                node = node.next;
            }
        }

        return head;
    }
}

---------------------

class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null) {
            return null;
        }
        HashSet<Integer> set = new HashSet<>();
        ListNode current = head;
        ListNode prev = null;

        while (current != null) {
            if (!set.contains(current.val)) {
                set.add(current.val);
                prev = current;
            } else {
                prev.next = current.next;
            }
            current = current.next;
        }
        return head;
    }
}

--------------------------

class Solution {
    public ListNode deleteDuplicates(ListNode node) {
        ListNode head = node;
        if(head == null) {
            return null;
        }
        while(node.next != null) {
            if(node.val == node.next.val) {
                node.next = node.next.next;
            } else {
                node = node.next;
            }
        }
        return head;
    }
}
