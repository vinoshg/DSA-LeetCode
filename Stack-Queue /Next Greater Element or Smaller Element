import java.util.Stack;

public class NextGreaterElementLeftToRight {
    public static int[] findNextGreaterElements(int[] arr) {
        int n = arr.length;
        int[] result = new int[n];
        Stack<Integer> stack = new Stack<>(); // Stack to store indices

        // Initialize the result array with -1
        for (int i = 0; i < n; i++) {
            result[i] = -1;
        }

        // Traverse the array from left to right
        for (int i = 0; i < n; i++) {
            // While the stack is not empty and the current element is greater
            // than the element corresponding to the index on top of the stack
            while (!stack.isEmpty() && arr[i] > arr[stack.peek()]) {
                int index = stack.pop();
                result[index] = arr[i]; // Update the result for the popped index
            }

            // Push the current index onto the stack
            stack.push(i);
        }

        return result;
    }

    public static void main(String[] args) {
        int[] arr = {4, 5, 2, 10, 8};
        int[] result = findNextGreaterElements(arr);

        // Print the result
        for (int value : result) {
            System.out.print(value + " ");
        }
    }
}
