// https://leetcode.com/problems/binary-tree-paths/
class Solution { // DFS - Pre Order
    List<String> list = new ArrayList<>();
    public List<String> binaryTreePaths(TreeNode root) {
        // List<String> list = new ArrayList<>();
        if(root == null) {
            return list;
        }
        helper(root, "");
        return list;
    }
    public void helper(TreeNode root, String str) {
        if(root == null) { // BC 1
            return;
        }

        str += String.valueOf(root.val) + "->"; // if(root != null)

        if(root.left == null && root.right == null) { // BC 2
            list.add(str.substring(0, str.length() - 2)); //-> is 2
            return; // To end the func call and return back to root
        }

        helper(root.left, str);
        helper(root.right, str);  
    }
}
