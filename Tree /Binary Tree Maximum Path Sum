// https://leetcode.com/problems/binary-tree-maximum-path-sum/
class Solution {
    int ans = Integer.MIN_VALUE; 
    // Computing Max value/sum, I will declare global variable
    // Similar to Diameter - DFS - Post Order
    public int maxPathSum(TreeNode root) {
        helper(root); // Need helper becoz return ans
        return ans;
    }
    public int helper(TreeNode node) {
        if(node == null) {
            return 0;
        }

        int left = helper(node.left);
        int right = helper(node.right);

        left = Math.max(0, left); //Ignoring negative path sum
        right = Math.max(0, right);

        int pathSum = left + right + node.val; //Computed 1 path sum
        ans = Math.max(ans, pathSum);

        return Math.max(left, right) + node.val; //going to compute another path sum

    }
}
