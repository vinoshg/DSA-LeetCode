// https://leetcode.com/problems/flatten-binary-tree-to-linked-list/
class Solution {
    public void flatten(TreeNode root) {
        // It's void - No return
        // ** This case No need to return root, I will consider current = root
        // if(root == null) { // I Can do this
        //     return;
        // }
        TreeNode current = root; //void
        while(current != null) {
            TreeNode temp = current.left;
            if(temp != null) {
                while(temp.right != null) {
                    temp = temp.right;
                } // temp.right = current.right; Should inside (temp != null)
                temp.right = current.right; //avoid null ponter exception
                current.right = current.left; // It's not temp, temp is changing
                current.left = null;
            }
            current = current.right;
        }
    }
}
